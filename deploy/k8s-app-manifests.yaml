---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web
  labels:
    app: web
spec:
  replicas: 2
  selector:
    matchLabels:
      app: web
  template:
    metadata:
      labels:
        app: web
    spec:
      containers:
        - name: web
          image: tpatrascuboom/testapp:v0.0.1
          imagePullPolicy: IfNotPresent
          env:
          - name: FLASK_ENV
            value: production
          - name: SQLALCHEMY_DATABASE_URI
            value: postgresql://testapp:nosecret@testdb.cshs2vid1rjz.us-west-1.rds.amazonaws.com:5432/testapp
          ports:
            - containerPort: 8080
          livenessProbe:
            httpGet:
              path: /liveness
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 2
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 2
          startupProbe:
            httpGet:
              path: /liveness
              port: 8080
            failureThreshold: 30
            periodSeconds: 10
            timeoutSeconds: 2
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
            limits:
              cpu: 100m
              memory: 256Mi
      affinity:
        podAntiAffinity: 
          preferredDuringSchedulingIgnoredDuringExecution: 
          - weight: 1  
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app 
                  operator: In
                  values:
                  - web
              topologyKey: kubernetes.io/hostname
 
 
---
apiVersion: v1
kind: Service
metadata:
  name: web
  labels:
    app: web
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: tcp
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: 'true'
    service.beta.kubernetes.io/aws-load-balancer-type: nlb
spec:
  type: LoadBalancer
  ports:
  - name: web
    port: 8080
  selector:
   app: web
 